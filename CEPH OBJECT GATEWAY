Ceph Object Gateway is an object storage interface built on top of librados to provide applications with a RESTful gateway to Ceph Storage Clusters.

Ceph Object Storage uses the Ceph Object Gateway daemon (radosgw), which is an HTTP server for interacting with a Ceph Storage Cluster. Since it provides 
interfaces compatible with OpenStack Swift and Amazon S3, the Ceph Object Gateway has its own user management. Ceph Object Gateway can store data in the same 
Ceph Storage Cluster used to store data from Ceph File System clients or Ceph Block Device clients. The S3 and Swift APIs share a common namespace, so you may 
write data with one API and retrieve it with the other.

Swift offers something called a container, which we use interchangeably with the term bucket, so we say that RGW’s buckets implement Swift containers.

Although RADOS only knows about pools and objects with their xattrs and omap[1], conceptually RGW organizes its data into three different kinds: metadata, bucket 
index, and data.

We have 3 ‘sections’ of metadata: ‘user’, ‘bucket’, and ‘bucket.instance’. 
$ radosgw-admin metadata list
$ radosgw-admin metadata list bucket
$ radosgw-admin metadata list bucket.instance
$ radosgw-admin metadata list user

$ radosgw-admin metadata get bucket:<bucket>
$ radosgw-admin metadata get bucket.instance:<bucket>:<bucket_id>
$ radosgw-admin metadata get user:<user>   # get or set

The Ceph Object Gateway purges the storage space used for deleted and overwritten objects in the Ceph Storage cluster some time after the gateway deletes the 
objects from the bucket index. The process of purging the deleted object data from the Ceph Storage cluster is known as Garbage Collection or GC

Garbage collection is a background activity that may execute continuously or during times of low loads, depending upon how the administrator configures the Ceph 
Object Gateway. By default, the Ceph Object Gateway conducts GC operations continuously. Since GC operations are a normal part of Ceph Object Gateway operations, 
especially with object delete operations, objects eligible for garbage collection exist most of the time.

